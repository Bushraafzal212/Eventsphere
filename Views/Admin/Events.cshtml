@model IEnumerable<EventSphere.Models.Event>

@{
    ViewData["Title"] = "Manage Events";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="display-6 fw-bold text-primary">
                    <i class="fas fa-calendar-alt me-3"></i>Event Management
                </h2>
                <a asp-action="CreateEvent" class="btn btn-primary btn-lg">
                    <i class="fas fa-plus me-2"></i>Create New Event
                </a>
            </div>

            <!-- Filter and Search Section -->
            <div class="card mb-4">
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-md-4">
                            <label for="categoryFilter" class="form-label">Filter by Category</label>
                            <select id="categoryFilter" class="form-select">
                                <option value="">All Categories</option>
                                <option value="Cultural">Cultural</option>
                                <option value="Academic">Academic</option>
                                <option value="Sports">Sports</option>
                                <option value="Social">Social</option>
                                <option value="Entertainment">Entertainment</option>
                                <option value="Career">Career</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label for="statusFilter" class="form-label">Filter by Status</label>
                            <select id="statusFilter" class="form-select">
                                <option value="">All Statuses</option>
                                <option value="Pending">Pending</option>
                                <option value="Approved">Approved</option>
                                <option value="Rejected">Rejected</option>
                                <option value="Cancelled">Cancelled</option>
                                <option value="Completed">Completed</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label for="searchInput" class="form-label">Search Events</label>
                            <input type="text" id="searchInput" class="form-control" placeholder="Search by title or description...">
                        </div>
                    </div>
                </div>
            </div>

            <!-- Events Table -->
            <div class="card">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover" id="eventsTable">
                            <thead class="table-dark">
                                <tr>
                                    <th>Title</th>
                                    <th>Category</th>
                                    <th>Date & Time</th>
                                    <th>Venue</th>
                                    <th>Status</th>
                                    <th>Registrations</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var eventItem in Model)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                @{
                                                    var imageService = ViewData["ImageService"] as EventSphere.Services.IImageService;
                                                    var imageUrl = imageService?.GetEventImageUrl(eventItem) ?? "https://images.unsplash.com/photo-1540575467063-178a50c2df87?w=800&h=400&fit=crop";
                                                }
                                                <img src="@imageUrl" class="rounded me-3" style="width: 50px; height: 50px; object-fit: cover;" alt="Event Image">
                                                <div>
                                                    <h6 class="mb-0">@eventItem.Title</h6>
                                                    <small class="text-muted">@eventItem.OrganizingDepartment</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <span class="badge bg-primary">@eventItem.Category</span>
                                        </td>
                                        <td>
                                            <div>
                                                <strong>@eventItem.EventDate.ToString("MMM dd, yyyy")</strong><br>
                                                <small class="text-muted">@eventItem.StartTime.ToString(@"hh\:mm") - @eventItem.EndTime.ToString(@"hh\:mm")</small>
                                            </div>
                                        </td>
                                        <td>@eventItem.Venue</td>
                                        <td>
                                            @switch (eventItem.Status)
                                            {
                                                case EventSphere.Models.EventStatus.Pending:
                                                    <span class="badge bg-warning">Pending</span>
                                                    break;
                                                case EventSphere.Models.EventStatus.Approved:
                                                    <span class="badge bg-success">Approved</span>
                                                    break;
                                                case EventSphere.Models.EventStatus.Rejected:
                                                    <span class="badge bg-danger">Rejected</span>
                                                    break;
                                                case EventSphere.Models.EventStatus.Cancelled:
                                                    <span class="badge bg-secondary">Cancelled</span>
                                                    break;
                                                case EventSphere.Models.EventStatus.Completed:
                                                    <span class="badge bg-info">Completed</span>
                                                    break;
                                            }
                                        </td>
                                        <td>
                                            <div class="progress" style="height: 20px;">
                                                @{
                                                    var percentage = eventItem.MaxCapacity > 0 ? (double)eventItem.CurrentRegistrations / eventItem.MaxCapacity * 100 : 0;
                                                }
                                                <div class="progress-bar @(percentage >= 100 ? "bg-danger" : percentage >= 80 ? "bg-warning" : "bg-success")" 
                                                     style="width: @(Math.Min(percentage, 100))%">
                                                    @eventItem.CurrentRegistrations/@eventItem.MaxCapacity
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                <a asp-action="EventDetails" asp-route-id="@eventItem.Id" class="btn btn-sm btn-outline-info" title="View Details">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                <a asp-action="EditEvent" asp-route-id="@eventItem.Id" class="btn btn-sm btn-outline-primary" title="Edit">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                @if (eventItem.Status == EventSphere.Models.EventStatus.Pending)
                                                {
                                                    <form asp-action="ApproveEvent" asp-route-id="@eventItem.Id" method="post" class="d-inline">
                                                        <button type="submit" class="btn btn-sm btn-outline-success" title="Approve" onclick="return confirm('Are you sure you want to approve this event?')">
                                                            <i class="fas fa-check"></i>
                                                        </button>
                                                    </form>
                                                    <form asp-action="RejectEvent" asp-route-id="@eventItem.Id" method="post" class="d-inline">
                                                        <button type="submit" class="btn btn-sm btn-outline-danger" title="Reject" onclick="return confirm('Are you sure you want to reject this event?')">
                                                            <i class="fas fa-times"></i>
                                                        </button>
                                                    </form>
                                                }
                                                <a asp-action="DeleteEvent" asp-route-id="@eventItem.Id" class="btn btn-sm btn-outline-danger" title="Delete" onclick="return confirm('Are you sure you want to delete this event?')">
                                                    <i class="fas fa-trash"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Filter and search functionality
        document.addEventListener('DOMContentLoaded', function() {
            const categoryFilter = document.getElementById('categoryFilter');
            const statusFilter = document.getElementById('statusFilter');
            const searchInput = document.getElementById('searchInput');
            const table = document.getElementById('eventsTable');
            const rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');

            function filterTable() {
                const categoryValue = categoryFilter.value.toLowerCase();
                const statusValue = statusFilter.value.toLowerCase();
                const searchValue = searchInput.value.toLowerCase();

                for (let i = 0; i < rows.length; i++) {
                    const row = rows[i];
                    const categoryCell = row.cells[1].textContent.toLowerCase();
                    const statusCell = row.cells[4].textContent.toLowerCase();
                    const titleCell = row.cells[0].textContent.toLowerCase();

                    const categoryMatch = categoryValue === '' || categoryCell.includes(categoryValue);
                    const statusMatch = statusValue === '' || statusCell.includes(statusValue);
                    const searchMatch = searchValue === '' || titleCell.includes(searchValue);

                    if (categoryMatch && statusMatch && searchMatch) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                }
            }

            categoryFilter.addEventListener('change', filterTable);
            statusFilter.addEventListener('change', filterTable);
            searchInput.addEventListener('input', filterTable);
        });
    </script>
}
